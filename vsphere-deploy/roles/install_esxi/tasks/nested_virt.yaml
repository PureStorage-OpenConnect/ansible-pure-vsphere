- name: Ensure hosts are switched off
  community.vmware.vmware_guest:
    hostname: "{{ hosting_vcenter_hostname }}"
    username: "{{ hosting_vcenter_username }}"
    password: "{{ hosting_vcenter_password }}"
    datacenter: "{{ hosting_esxi_datacenter }}"
    cluster: "{{ hosting_esxi_cluster }}"
    folder: "{{ hosting_esxi_folder }}"
    name: "{{ item.name }}"
    state: poweredoff
    validate_certs: no
  loop: "{{ install_hosts }}"
  loop_control:
    label: "{{ item.name }}"
  when: dryrun is not defined or not dryrun

- name: Set hosts to boot from first vnic
  community.vmware.vmware_guest_boot_manager:
    hostname: "{{ hosting_vcenter_hostname }}"
    username: "{{ hosting_vcenter_username }}"
    password: "{{ hosting_vcenter_password }}"
    name: '{{ item.name }}'
    boot_firmware: efi
    secure_boot_enabled: false
    boot_order:
      - ethernet
      - disk
    validate_certs: no
  loop: "{{ install_hosts }}"
  loop_control:
    label: "{{ item.name }}"
  when: dryrun is not defined or not dryrun

- name: Power-on hosts
  community.vmware.vmware_guest:
    hostname: "{{ hosting_vcenter_hostname }}"
    username: "{{ hosting_vcenter_username }}"
    password: "{{ hosting_vcenter_password }}"
    datacenter: "{{ hosting_esxi_datacenter }}"
    cluster: "{{ hosting_esxi_cluster }}"
    folder: "{{ hosting_esxi_folder }}"
    name: "{{ item.name }}"
    state: poweredon
    validate_certs: no
  loop: "{{ install_hosts }}"
  loop_control:
    label: "{{ item.name }}"
  when: dryrun is not defined or not dryrun

- name: Set hosts to boot from first disk
  community.vmware.vmware_guest_boot_manager:
    hostname: "{{ hosting_vcenter_hostname }}"
    username: "{{ hosting_vcenter_username }}"
    password: "{{ hosting_vcenter_password }}"
    name: '{{ item.name }}'
    boot_firmware: efi
    secure_boot_enabled: false
    boot_order:
      - disk
      - ethernet
    validate_certs: no
  loop: "{{ install_hosts }}"
  loop_control:
    label: "{{ item.name }}"
  when: dryrun is not defined or not dryrun

- name: Check hosts are available
  community.vmware.vmware_guest:
    hostname: "{{ hosting_vcenter_hostname }}"
    username: "{{ hosting_vcenter_username }}"
    password: "{{ hosting_vcenter_password }}"
    datacenter: "{{ hosting_esxi_datacenter }}"
    cluster: "{{ hosting_esxi_cluster }}"
    folder: "{{ hosting_esxi_folder }}"
    name: "{{ item.name }}"
    state: present
    validate_certs: no
  loop: "{{ install_hosts }}"
  loop_control:
    label: "{{ item.name }}"
  when: dryrun is defined and dryrun

- name: Check whether ESXi nodes are available
  community.vmware.vmware_about_info:
    hostname: "{{ item.ip1 }}"
    username: "{{ esxi_username }}"
    password: "{{ esxi_password }}"
    validate_certs: no
  register: esxi_about_info
#  until: esxi_about_info.about_info.product_name == "VMware ESXi"
  until: esxi_about_info is not failed and esxi_about_info.about_info is defined and esxi_about_info.about_info.product_name == "VMware ESXi"
  delay: 60
  retries: 40
  loop: "{{ install_hosts }}"
  loop_control:
    label: "{{ item.name }}"
  when: dryrun is not defined or not dryrun
